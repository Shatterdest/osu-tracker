name: Build osu-tracker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: 
jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: osu-tracker
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [debug, release]
        architecture: [x86]  # Only target x86 (32-bit)
        c_compiler: [gcc, cl]
        cpp_compiler: [g++, cl]
        include:
          - os: ubuntu-latest
            build_type: debug
            preset: x86-debug-linux
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            build_type: release
            preset: x86-release-linux
            c_compiler: gcc
            cpp_compiler: g++
          - os: windows-latest
            build_type: debug
            preset: x86-debug-windows
            c_compiler: cl
            cpp_compiler: cl
          - os: windows-latest
            build_type: release
            preset: x86-release-windows
            c_compiler: cl
            cpp_compiler: cl
        exclude:
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: cl
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: cl
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: cl

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: .

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: List files in osu-tracker directory
        run: ls -R ${{ github.workspace }}/osu-tracker

      - name: Install dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev zlib1g-dev libx11-dev

      - name: Install CMake
        uses: lukka/get-cmake@v4.0.1

      - name: Set up MSVC environment
        if: runner.os == 'Windows'
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x86

      - name: Configure-Linux
        if: runner.os == 'Linux'
        uses: lukka/run-cmake@v10.8
        with:
          cmakeListsTxtPath: '/home/runner/work/osu-tracker/osu-tracker/osu-tracker/CMakeLists.txt'
          configurePreset: '${{ matrix.preset }}'
      
      - name: Configure-Windows
        if: runner.os == 'Windows'
        uses: lukka/run-cmake@v10.8
        with:
          cmakeListsTxtPath: 'D:\a\osu-tracker\osu-tracker\osu-tracker\CMakeLists.txt'
          configurePreset: '${{ matrix.preset }}'
        env:
          VCPKG_ROOT:
      
      - name: Build-Linux
        if: runner.os == 'Linux'
        uses: lukka/run-cmake@v10.8
        with:
          cmakeListsTxtPath: '/home/runner/work/osu-tracker/osu-tracker/osu-tracker/CMakeLists.txt'
          buildPreset: '${{ matrix.preset }}'

      - name: Build-Windows
        if: runner.os == 'Windows'
        uses: lukka/run-cmake@v10.8
        with:
          cmakeListsTxtPath: 'D:\a\osu-tracker\osu-tracker\osu-tracker\CMakeLists.txt'
          buildPreset: '${{ matrix.preset }}'
        env:
          VCPKG_ROOT:

      - name: Upload Windows Debug artifact
        if: runner.os == 'Windows' && matrix.build_type == 'debug'
        uses: actions/upload-artifact@v4
        with:
          name: osu-tracker-windows-debug
          path: |
            ${{ github.workspace }}/osu-tracker/out/build/x86-debug-windows/osu-tracker/**

      - name: Upload Windows Release artifact
        if: runner.os == 'Windows' && matrix.build_type == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: osu-tracker-windows-release
          path: |
            ${{ github.workspace }}/osu-tracker/out/build/x86-release-windows/osu-tracker/**

      - name: Upload Linux Debug artifact
        if: runner.os == 'Linux' && matrix.build_type == 'debug'
        uses: actions/upload-artifact@v4
        with:
          name: osu-tracker-linux-debug
          path: |
            ${{ github.workspace }}/osu-tracker/out/build/x86-debug-linux/osu-tracker/**

      - name: Upload Linux Release artifact
        if: runner.os == 'Linux' && matrix.build_type == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: osu-tracker-linux-release
          path: |
            ${{ github.workspace }}/osu-tracker/out/build/x86-release-linux/osu-tracker/**

      # Only run this on manual trigger
      - name: Download all artifacts
        if: github.event_name == 'workflow_dispatch'
        uses: actions/download-artifact@v4
        with:
          path: ./release-artifacts

      - name: Create GitHub Release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: manual-release-${{ github.run_number }}
          name: Manual Release ${{ github.run_number }}
          files: ./release-artifacts/**/*

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}