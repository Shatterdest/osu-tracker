name: Build osu-tracker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [debug, release]
        c_compiler: [gcc, cl]
        cpp_compiler: [g++, cl]
        include:
          - os: ubuntu-latest
            build_type: debug
            preset: x86-debug-linux
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            build_type: release
            preset: x86-release-linux
            c_compiler: gcc
            cpp_compiler: g++
          - os: windows-latest
            build_type: debug
            preset: x86-debug-windows
            c_compiler: cl
            cpp_compiler: cl
          - os: windows-latest
            build_type: release
            preset: x86-release-windows
            c_compiler: cl
            cpp_compiler: cl
        exclude:
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: cl
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: cl
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: cl

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: List files in osu-tracker directory
        run: ls -R ${{ github.workspace }}/osu-tracker

      - name: Install dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev zlib1g-dev

      - name: Install CMake
        uses: lukka/get-cmake@v4.0.1

      - name: Set up MSVC environment
        if: runner.os == 'Windows'
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: Configure
        uses: lukka/run-cmake@v10.8
        with:
          cmakeListsTxtPath: 'CMakeLists.txt'
          configurePreset: '${{ matrix.preset }}'

      - name: Build
        uses: lukka/run-cmake@v10
        with:
          buildPreset: '${{ matrix.preset }}'


      - name: Configure CMake
        run: >
          cmake --preset ${{ matrix.preset }}
      - name: Build
        # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
        run: cmake --build out/build/${{ matrix.preset }}